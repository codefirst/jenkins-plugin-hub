.container
 .row
  .span16
   %ul#filter.pills{:style => 'margin-bottom:0'}
    %li{:class => (@category == 'All')?'active':''}= link_to "All", "#"
    - @categories.each do |category|
     %li{:class => (@category == category)?'active':''}= link_to category, "?category=#{category}"
 .row
  .span10
   = link_to image_tag('feed-icon-28x28.png'), url_for(:jenkins_plugins, :show, :category => @category, :word => @word, :format => :rss), :id => 'rss-link'
  .span6{:style => 'text-align:right'}
   = image_tag('ajax-loader.gif', :id => 'search-loader', :style => 'display:none;padding-top: 4px;')
   %span{:id => 'item-count', :style => 'padding-top: 4px;color: #888;'}= @plugins['plugins'].size.to_s
   %span{:style => 'padding-top: 4px;color: #888;'}
    items
   %form{:method => :get, :style => 'display: inline;'}
    %input{:id => 'search-box', :class => 'span4', :type => :text, :placeholder => 'Search', :style => 'margin-bottom: 5px', :value => @word, :name => 'word'}
 .row
  .span16
   %table#table.zebra-striped
    %thead
     %tr
      %th Name
      %th Version
      %th{:style => 'width:100px'} Release
      %th Description
    %tbody
    - @plugins['plugins'].to_a.sort { |a, b| Time.parse(b[1]['releaseTimestamp']) - Time.parse(a[1]['releaseTimestamp']) }.each do |key, plugin|
     %tr{:class => (plugin['labels']||[]).join(' ')}
      %td.name= link_to(plugin['title'], plugin['wiki'])
      %td.version= plugin['version']
      %td.release= time_ago_in_words(plugin['releaseTimestamp']) + " ago"
      %td.discription!= plugin['excerpt']

:javascript
 $(function() {
   var filter = function(category, word) {
     $('#search-loader').show();
     var re = new RegExp(word, 'i');
     var i = 0;
     $('#table tbody tr').each(function() {
       if ((category == 'All' || $(this).hasClass(category))
          && (word == '' || $(this).text().search(re) != -1)) {
         $(this).show();
         i++;
       } else {
         $(this).hide();
       }
     });
     $('#item-count').text(i);
     var rssurl = ['#{url_for(:jenkins_plugins, :show, :format => :rss)}',
                   '?category=', last_category,
                   '&word=', word].join('');
     $('#rss-link').attr('href', rssurl);
     $('#search-loader').hide();
   }
   var last_category = 'All';
   $('#filter li').bind("click", function(e) {
     $('#filter li').removeClass("active");
     $(e.target).parent().addClass("active");

     last_category = e.target.text;
     filter(last_category, $('#search-box').attr('value'));

     return false;
   });
   var timer = 0;
   $('#search-box').bind("keyup", function(e) {
     var word = e.target.value;
     clearTimeout(timer);
     timer = setTimeout(function() {
       filter(last_category, word);
     }, 500);
   });

 });
